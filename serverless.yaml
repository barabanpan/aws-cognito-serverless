# For full config options, check the docs:
# https://www.serverless.com/framework/docs/providers/aws/guide/serverless.yml/

service: learn-serverless

frameworkVersion: '2'

package:
  individually: true  # for each lambda to be packaged individually

provider:
  name: aws
  runtime: python3.7
  stage: dev
  region: eu-central-1

custom:
  USERS_TABLE_NAME: users_${opt:stage, self:provider.stage, 'dev'}

functions:
  sign_up:
    handler: code/sign_up/sign_up.handler
    layers:
      - { Ref: BasicLambdaLayer }
    events:
      - http:
          path: /users/sign_up
          method: post
          cors: true
    iamRoleStatements:
      - Sid: ${self:custom.USERS_TABLE_NAME}
        Effect: "Allow"
        Action:
         - dynamodb:PutItem
    package:
      exclude:
        - ./**
      include:
        - code/sign_up/**

  add:
    handler: code/addition/add.add
    layers:
      - { Ref: BasicLambdaLayer }
    events:
      - http:
          path: /calculations/add
          method: post
          cors: true
    iamRoleStatements:
      - Effect: "Allow"
        Action:
         - dynamodb:*
    package:
      exclude:
        - ./**
      include:
        - code/addition/**

  subtract:
    handler: code/subtraction/subtract.subtract
    layers:
      - { Ref: BasicLambdaLayer }
    events:
      - http:
          path: /calculations/subtract
          method: post
          cors: true
    iamRoleStatements:
      - Effect: "Allow"
        Action:
         - dynamodb:*
    package:
      exclude:
        - ./**
      include:
        - code/subtraction/**

resources:
  CognitoUserPool:
    Type: AWS::Cognito::UserPool
    Properties:
      MfaConfiguration: OFF   # multi-factor authentication
      UserPoolName: my-user-pool
      UsernameAttributes:
        - email
      Policies:
        PasswordPolicy:
          MinimumLength: 8
          RequireLowercase: True
          RequireNumbers: True
          RequireSymbols: False
          RequireUppercase: True
  CognitoUserPoolClient:
    Type: "AWS::Cognito::UserPoolClient"
    Properties:
      ClientName: my-user-pool-client
      GenerateSecret: False
      UserPoolId:
        Ref: CognitoUserPool

  Resources:
    usersTable:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: ${self:custom.USERS_TABLE_NAME}
        AttributeDefinitions:
          - AttributeName: email
            AttributeType: S
        KeySchema:
          - AttributeName: email
            KeyType: HASH
        ProvisionedThroughput:
          ReadCapacityUnits: 5
          WriteCapacityUnits: 5

layers:
  basic:
    path: ./code/layers/basic_layer
    name: basic_layer
    compatibleRuntimes:
      - python3.6
      - python3.7
      - python3.8